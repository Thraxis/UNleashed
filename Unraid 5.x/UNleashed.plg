<?xml version='1.0' standalone='yes'?>
<PLUGIN>
<!--
UNleashed core plugin

Reads *.plg files in the /boot/config/plugins folder looking for !required tags to build
a list of packages, and generating a package install plugin so packages are installed once,
centralizing the location to update a package version. 
-->

<FILE Name="/tmp/UNleashed-packagecheck" Run="/bin/bash">
<INLINE>
<![CDATA[
#!/bin/bash
declare -a required
declare -A packages

# Available Packages to install
# Pipe delimeted in the format of "File to save in /boot/packages" | "URL of File to Download" | "MD5 of File"
packages[python]="python-2.7.3-i686-5PTr.txz|--no-check-certificate https://copy.com/8Zye0EQw7L6sy72K/unrad-generic/python-2.7.3-i686-5PTr.txz|644b5f3f14e76aaa5b43f01a50d8defa"
packages[sqlite]="sqlite-3.7.16-i686-1PTr.txz|--no-check-certificate https://copy.com/8Zye0EQw7L6sy72K/unrad-generic/sqlite-3.7.16-i686-1PTr.txz|104865e791d032e91a85d9c134b21be1"
packages[openssl-solibs]="openssl-solibs-0.9.8y-i486-1_slack13.37.txz|http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/patches/packages/openssl-solibs-0.9.8y-i486-1_slack13.37.txz|5248a839148fa91de52361335dc051f5"
packages[openssl]="openssl-0.9.8y-i486-1_slack13.37.txz|http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/patches/packages/openssl-0.9.8y-i486-1_slack13.37.txz|5195be05b85f5eb2bd4bf9ebf0a73ff9"
packages[curl]="curl-7.35.0-i486-1_slack13.37.txz|http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/patches/packages/curl-7.35.0-i486-1_slack13.37.txz|0462c2439896e16dae20e4838f2e770b"
packages[git]="git-1.8.4-i486-1.txz|http://slackware.osuosl.org/slackware-14.1/slackware/d/git-1.8.4-i486-1.txz|77a2cbdaf2e93408f71d81521e2bee64"
packages[infozip]="infozip-6.0-i486-1.txz|--no-check-certificate https://copy.com/8Zye0EQw7L6sy72K/unrad-generic/infozip-6.0-i686-4PTr.txz|96f87543dac7654fa65407c3205a7311"
packages[par2cmdline]="par2cmdline_tbb-0.4-i486-1kh.tgz|http://unraid-greenleaf-repository.googlecode.com/files/par2cmdline_tbb-0.4-i486-1kh.tgz|c5a5550888ae009531f133a33ed85be7"
packages[unrar]="unrar-5.0.14-i486-1cf.txz|--no-check-certificate http://dl.bintray.com/darkside401/unrar5-unraid/unrar-5.0.14-i486-1cf.txz|0e93fb29caab9db35d3ebfbf455ffc50"
packages[pyopenssl]="pyopenssl-0.11-i486-1alien.tgz|http://connie.slackware.com/~alien/slackbuilds/pyopenssl/pkg/13.37/pyopenssl-0.11-i486-1alien.tgz|e02b8f7ff139e51c101721440068c455"
packages[zlib]="zlib-1.2.7-i686-2PTr.txz|--no-check-certificate https://dl.dumptruck.goldenfrog.com/p/Vq3zpArAKB/zlib-1.2.7-i686-2PTr.txz|e68aca878cb2c95af873e7ae4c231d45"
packages[libffi]="libffi-3.0.13-i686-1PTr.txz|--no-check-certificate https://dl.dumptruck.goldenfrog.com/p/Vq3zpArAKB/libffi-3.0.13-i686-1PTr.txz|b8c4ec614c22598e063bcf0ca6b2679e"
packages[libidn]="libidn-1.26-i686-1PTr.txz|--no-check-certificate https://copy.com/8Zye0EQw7L6sy72K/unrad-generic/libidn-1.26-i686-1PTr.txz|4b0b70c9f32d91d84a88270dc499844a"
packages[libevent]="libevent-2.0.21-i686-1PTr.txz|--no-check-certificate https://copy.com/8Zye0EQw7L6sy72K/unrad-generic/libevent-2.0.21-i686-1PTr.txz|0073604de2a5d507c0b707601af2f5f2"
packages[openldap-client]="openldap-client-2.4.34-i686-1PTr.txz|--no-check-certificate https://copy.com/8Zye0EQw7L6sy72K/unrad-generic/openldap-client-2.4.34-i686-1PTr.txz|7e846abb9c5d10cc6d46d5efedb7f148"
packages[screen]="screen-4.0.3-i486-1.txz|http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/ap/screen-4.0.3-i486-1.txz|1a59b0fdac921b858510d57e43f77543"

for file in /boot/config/plugins/*.plg
do
	while read -r line
	do
		if [[ $line == !required* ]] ;
		then
			found="0";
			[[ $line =~ !required.(.+) ]] && PKG=${BASH_REMATCH[1]};
			for i in ${required[@]};
			do
				if [ "$i" = ${PKG} ]; then
					found="1";
				fi
			done
			if [ "$found" = "0" ]; then
				required+=($PKG);
			fi
		fi
	done < "$file"
done

if [[ ${#required[@]} -eq 0 ]]; then
	echo "No Required Packages"
else
	echo "<?xml version='1.0' standalone='yes'?>" > /boot/config/plugins/zpackages.plg;
	echo "<PLUGIN>" >> /boot/config/plugins/zpackages.plg; 
	for i in ${required[@]};
	do
		IFS='|' O=( ${packages[$i]} );
		echo "<FILE Name=\"/boot/packages/${O[0]}\" Run=\"upgradepkg --install-new\">" >> /boot/config/plugins/zpackages.plg;
		echo "<URL>${O[1]}</URL>" >> /boot/config/plugins/zpackages.plg;
		echo "<MD5>${O[2]}</MD5>" >> /boot/config/plugins/zpackages.plg;
		echo "</FILE>" >> /boot/config/plugins/zpackages.plg;
	done
	echo "</PLUGIN>" >> /boot/config/plugins/zpackages.plg
fi
#rm /tmp/UNleashed-packagecheck
]]>
</INLINE>
</FILE>

<FILE Name="/var/log/plugins/UNleashed">
<INLINE>
<![CDATA[

]]>
</INLINE>
</FILE>
</PLUGIN>